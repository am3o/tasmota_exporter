name: Release

on:
  push:
    branches:
      - "*"
    tags:
      - v*
permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        step: [ vet, test ]
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: ${{ matrix.step }}
        run: make ${{ matrix.step }}

  golangci:
    name: golangci
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

  staticcheck:
    name: "staticcheck"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: dominikh/staticcheck-action@v1.1.0
        with:
          version: "2021.1.1"

  build:
    runs-on: ubuntu-latest
    needs:
      - test
      - golangci
      - staticcheck
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: build
        run: make build

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    environment:
      name: Publish
    needs:
      - build
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
        id: go

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Generate Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: netzaffe/co2-exporter
          tags: |
            type=ref,event=branch,pattern=latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
          flavor: |
            latest=true
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}