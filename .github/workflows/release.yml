name: Release

on:
  push:
    branches:
      - "*"
    tags:
      - v*
permissions:
  contents: read

env:
  # Common versions
  GO_VERSION: '1.18'
  GOLANGCI_VERSION: 'v1.38'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        step: [ vet, test ]
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: ${{ matrix.step }}
        run: make ${{ matrix.step }}

  golangci:
    name: golangci
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GOLANGCI_VERSION }}

  staticcheck:
    name: "staticcheck"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: dominikh/staticcheck-action@v1.1.0
        with:
          version: "2021.1.1"

  build:
    runs-on: ubuntu-latest
    needs:
      - test
      - golangci
      - staticcheck
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: build
        run: make build

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_SECRET }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}